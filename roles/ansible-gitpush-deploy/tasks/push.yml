---

# In some cases (no all, apparently, but anyway, see https://github.com/ansible/ansible/issues/16139),
# ansible_host under a local_action becomes localhost and we don't want that. To work around this,
# we set another variable here, outside the local_action.
#- set_fact:
#    gitpush_host: "{{ ansible_host }}"

#- name: Ensure that we can gitpush as the user
#  authorized_key:
#    user: "{{ gitpush_user }}"
#    state: present
#    key: "{{ item_key }}"
#  with_items: "{{ gitpush_ssh_keys }}"
#  loop_control:
#    loop_var: item_key

- name: Ensure that we have something to GitPush
  local_action:
    module: shell
    _raw_params: "command git --git-dir=\"{{ gitpush_repo_path }}\" --work-tree=\"{{ git_checkout_location }}\" status"
    #chdir: "{{ git_checkout_location }}"
  register: gitchanges

- name: Print out local changes information
  debug:
    msg: "{{ gitchanges }}"

# Exit if there are no uncommittted files or if there are no commits needed upstream
- name: Exit if nothing to commit 
  fail: msg="Nothing to commit"
  when: gitchanges.stdout == "# On branch master\nnothing to commit, working directory clean"

- name: commit changes locally
  local_action: 
    module: shell
    _raw_params: "command cd \"{{ git_checkout_location }}\" && git add -A && git commit -m 'Automated Ansible commit'"
    chdir: "{{ git_checkout_location }}"

- name: Push repo to upstream origin
  local_action: "command git --git-dir=\"{{ git_checkout_location }}/.git\" push \"{{ git_remote_repo_path }}\" HEAD:master"
  changed_when: response.stderr != "Everything up-to-date"
  register: response
  # We never use "become" on this local action because we're on the control machine and become_user
  # is probably a user that doesn't exist!
  become: no
  notify: "{{ notify }}"
